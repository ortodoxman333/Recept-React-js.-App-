{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","map","ingredient","text","src","alt","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","onSubmit","e","preventDefault","type","value","onChange","target","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"yPAkBeA,EAfA,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,MAAMC,EAAiC,EAAjCA,SAASC,EAAwB,EAAxBA,MAAMC,EAAkB,EAAlBA,YACnC,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,6BAAKN,IACL,6BACKG,EAAYI,KAAI,SAAAC,GAAU,OAC5B,6BAAKA,EAAWC,YAGnB,4BAAIR,IACJ,qBAAKG,UAAWC,IAAMH,MAAOQ,IAAKR,EAAOS,IAAI,SCmD1CC,G,MA5DH,WACV,IADgB,EAIaC,mBAAU,IAJvB,mBAITC,EAJS,KAIDC,EAJC,OAKWF,mBAAS,IALpB,mBAKTG,EALS,KAKFC,EALE,OAMSJ,mBAAS,WANlB,mBAMTK,EANS,KAMHC,EANG,KAQhBC,qBAAU,WACRC,MACA,CAACH,IAEH,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OACSL,EADT,mBAZf,WAYe,oBAXd,qCAUG,cACXM,EADW,gBAIAA,EAASC,OAJT,OAIbC,EAJa,OAKnBX,EAAWW,EAAKC,MALG,2CAAH,qDAkBhB,OACE,sBAAKvB,UAAU,MAAf,UACE,uBAAMwB,SARM,SAAAC,GAChBA,EAAEC,iBACFX,EAASH,GACTC,EAAU,KAKqBb,UAAU,cAArC,UACE,uBACAA,UAAU,aACV2B,KAAK,OACLC,MAAOhB,EACPiB,SAjBa,SAAAJ,GACnBZ,EAAUY,EAAEK,OAAOF,UAkBb,wBACA5B,UAAU,gBAAgB2B,KAAK,SAD/B,uBAKF,sBAAK3B,UAAU,UAAf,UACCU,EAAQP,KAAI,SAAAD,GAAM,OACjB,cAAC,EAAD,CAGAN,MAAOM,EAAOA,OAAO6B,MACrBlC,SAAUK,EAAOA,OAAOL,SACxBC,MAAOI,EAAOA,OAAOJ,MACrBC,YAAaG,EAAOA,OAAOH,aAJtBG,EAAOA,OAAO6B,UAJrB,YCpCSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,yB","file":"static/js/main.4863a792.chunk.js","sourcesContent":["import React from \"react\";\r\nimport style from \"./recipe.module.css\";\r\n\r\nconst Recipe = ({ title,calories,image,ingredients }) => {\r\n    return (\r\n        <div className={style.recipe}>\r\n            <h1>{title}</h1>\r\n            <ol>\r\n                {ingredients.map(ingredient => (\r\n               <li>{ingredient.text}</li>\r\n                ))}\r\n            </ol>\r\n            <p>{calories}</p>\r\n            <img className={style.image} src={image} alt=\"\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Recipe;","import React, {useEffect, useState} from \"react\";\nimport Recipe from \"./Recipe\";\nimport './App.css';\n\nconst App = () => {\n  const APP_ID = \"a28f719f\";\n  const APP_KEY = \"54f0f78c66160a6c7468a2def156c495\";\n\n  const [recipes,setRecipes] = useState ([]);\n  const [search,setSearch] = useState(''); \n  const [query,setQuery] = useState('chicken');\n\n  useEffect(() => {\n    getRecipes();\n  },[query]);\n\n  const getRecipes = async () => {\n    const response = await fetch(\n      `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\n      );\n  const data = await response.json();\n  setRecipes(data.hits);\n};\n\nconst updateSearch = e => {\n  setSearch(e.target.value);\n}\n\nconst getSearch = e => {\n  e.preventDefault();\n  setQuery(search);\n  setSearch('');\n};\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={getSearch} className=\"search-form\">\n        <input \n        className=\"search-bar\" \n        type=\"text\" \n        value={search} \n        onChange={updateSearch}\n        />\n        <button\n        className=\"search-button\" type=\"submit\">\n         Search\n        </button>\n      </form>\n      <div className=\"recipes\">\n      {recipes.map(recipe => (\n        <Recipe  \n        \n        key={recipe.recipe.label}\n        title={recipe.recipe.label} \n        calories={recipe.recipe.calories}\n        image={recipe.recipe.image}\n        ingredients={recipe.recipe.ingredients}\n        />\n      ))};\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__HPtjf\",\"image\":\"recipe_image__3O83f\"};"],"sourceRoot":""}